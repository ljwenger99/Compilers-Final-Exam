Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declarations DONE
Rule 2     declarations -> declarations declaration
Rule 3     declarations -> declaration
Rule 4     declaration -> gvardecl
Rule 5     declaration -> funcdecl
Rule 6     gvardecl -> TYPE ID gvarinit
Rule 7     gvarinit -> SEMI
Rule 8     gvarinit -> ASSIGN INTEGER SEMI
Rule 9     gvarinit -> ASSIGN STRING SEMI
Rule 10    funcdecl -> funcname LPAREN paramlist RPAREN block
Rule 11    funcname -> TYPE ID
Rule 12    paramlist -> <empty>
Rule 13    paramlist -> params
Rule 14    params -> TYPE ID
Rule 15    params -> TYPE ID COMMA params
Rule 16    block -> LBRACE stmtlist RBRACE
Rule 17    stmtlist -> <empty>
Rule 18    stmtlist -> stmtlist stmt SEMI
Rule 19    stmtlist -> stmtlist stmt
Rule 20    stmt -> PRINT LPAREN expr RPAREN
Rule 21    stmt -> READ LPAREN ID RPAREN
Rule 22    stmt -> TYPE ID
Rule 23    stmt -> TYPE ID ASSIGN expr
Rule 24    stmt -> RETURN expr
Rule 25    stmt -> ID ASSIGN expr
Rule 26    stmt -> call
Rule 27    expr -> INTEGER
Rule 28    expr -> STRING
Rule 29    expr -> ID
Rule 30    expr -> expr PLUS expr
Rule 31    expr -> expr MINUS expr
Rule 32    expr -> expr TIMES expr
Rule 33    expr -> expr DIVIDE expr
Rule 34    expr -> MINUS expr
Rule 35    expr -> call
Rule 36    call -> ID LPAREN arglist RPAREN
Rule 37    arglist -> <empty>
Rule 38    arglist -> args
Rule 39    args -> expr
Rule 40    args -> args COMMA expr

Terminals, with rules where they appear

ASSIGN               : 8 9 23 25
COMMA                : 15 40
DIVIDE               : 33
DONE                 : 1
ID                   : 6 11 14 15 21 22 23 25 29 36
INTEGER              : 8 27
LBRACE               : 16
LPAREN               : 10 20 21 36
MINUS                : 31 34
PLUS                 : 30
PRINT                : 20
RBRACE               : 16
READ                 : 21
RETURN               : 24
RPAREN               : 10 20 21 36
SEMI                 : 7 8 9 18
STRING               : 9 28
TIMES                : 32
TYPE                 : 6 11 14 15 22 23
error                : 

Nonterminals, with rules where they appear

arglist              : 36
args                 : 38 40
block                : 10
call                 : 26 35
declaration          : 2 3
declarations         : 1 2
expr                 : 20 23 24 25 30 30 31 31 32 32 33 33 34 39 40
funcdecl             : 5
funcname             : 10
gvardecl             : 4
gvarinit             : 6
paramlist            : 10
params               : 13 15
program              : 0
stmt                 : 18 19
stmtlist             : 16 18 19

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declarations DONE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declaration -> . gvardecl
    (5) declaration -> . funcdecl
    (6) gvardecl -> . TYPE ID gvarinit
    (10) funcdecl -> . funcname LPAREN paramlist RPAREN block
    (11) funcname -> . TYPE ID

    TYPE            shift and go to state 6

    program                        shift and go to state 1
    declarations                   shift and go to state 2
    declaration                    shift and go to state 3
    gvardecl                       shift and go to state 4
    funcdecl                       shift and go to state 5
    funcname                       shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> declarations . DONE
    (2) declarations -> declarations . declaration
    (4) declaration -> . gvardecl
    (5) declaration -> . funcdecl
    (6) gvardecl -> . TYPE ID gvarinit
    (10) funcdecl -> . funcname LPAREN paramlist RPAREN block
    (11) funcname -> . TYPE ID

    DONE            shift and go to state 8
    TYPE            shift and go to state 6

    declaration                    shift and go to state 9
    gvardecl                       shift and go to state 4
    funcdecl                       shift and go to state 5
    funcname                       shift and go to state 7

state 3

    (3) declarations -> declaration .

    DONE            reduce using rule 3 (declarations -> declaration .)
    TYPE            reduce using rule 3 (declarations -> declaration .)


state 4

    (4) declaration -> gvardecl .

    DONE            reduce using rule 4 (declaration -> gvardecl .)
    TYPE            reduce using rule 4 (declaration -> gvardecl .)


state 5

    (5) declaration -> funcdecl .

    DONE            reduce using rule 5 (declaration -> funcdecl .)
    TYPE            reduce using rule 5 (declaration -> funcdecl .)


state 6

    (6) gvardecl -> TYPE . ID gvarinit
    (11) funcname -> TYPE . ID

    ID              shift and go to state 10


state 7

    (10) funcdecl -> funcname . LPAREN paramlist RPAREN block

    LPAREN          shift and go to state 11


state 8

    (1) program -> declarations DONE .

    $end            reduce using rule 1 (program -> declarations DONE .)


state 9

    (2) declarations -> declarations declaration .

    DONE            reduce using rule 2 (declarations -> declarations declaration .)
    TYPE            reduce using rule 2 (declarations -> declarations declaration .)


state 10

    (6) gvardecl -> TYPE ID . gvarinit
    (11) funcname -> TYPE ID .
    (7) gvarinit -> . SEMI
    (8) gvarinit -> . ASSIGN INTEGER SEMI
    (9) gvarinit -> . ASSIGN STRING SEMI

    LPAREN          reduce using rule 11 (funcname -> TYPE ID .)
    SEMI            shift and go to state 13
    ASSIGN          shift and go to state 14

    gvarinit                       shift and go to state 12

state 11

    (10) funcdecl -> funcname LPAREN . paramlist RPAREN block
    (12) paramlist -> .
    (13) paramlist -> . params
    (14) params -> . TYPE ID
    (15) params -> . TYPE ID COMMA params

    RPAREN          reduce using rule 12 (paramlist -> .)
    TYPE            shift and go to state 17

    paramlist                      shift and go to state 15
    params                         shift and go to state 16

state 12

    (6) gvardecl -> TYPE ID gvarinit .

    DONE            reduce using rule 6 (gvardecl -> TYPE ID gvarinit .)
    TYPE            reduce using rule 6 (gvardecl -> TYPE ID gvarinit .)


state 13

    (7) gvarinit -> SEMI .

    DONE            reduce using rule 7 (gvarinit -> SEMI .)
    TYPE            reduce using rule 7 (gvarinit -> SEMI .)


state 14

    (8) gvarinit -> ASSIGN . INTEGER SEMI
    (9) gvarinit -> ASSIGN . STRING SEMI

    INTEGER         shift and go to state 18
    STRING          shift and go to state 19


state 15

    (10) funcdecl -> funcname LPAREN paramlist . RPAREN block

    RPAREN          shift and go to state 20


state 16

    (13) paramlist -> params .

    RPAREN          reduce using rule 13 (paramlist -> params .)


state 17

    (14) params -> TYPE . ID
    (15) params -> TYPE . ID COMMA params

    ID              shift and go to state 21


state 18

    (8) gvarinit -> ASSIGN INTEGER . SEMI

    SEMI            shift and go to state 22


state 19

    (9) gvarinit -> ASSIGN STRING . SEMI

    SEMI            shift and go to state 23


state 20

    (10) funcdecl -> funcname LPAREN paramlist RPAREN . block
    (16) block -> . LBRACE stmtlist RBRACE

    LBRACE          shift and go to state 25

    block                          shift and go to state 24

state 21

    (14) params -> TYPE ID .
    (15) params -> TYPE ID . COMMA params

    RPAREN          reduce using rule 14 (params -> TYPE ID .)
    COMMA           shift and go to state 26


state 22

    (8) gvarinit -> ASSIGN INTEGER SEMI .

    DONE            reduce using rule 8 (gvarinit -> ASSIGN INTEGER SEMI .)
    TYPE            reduce using rule 8 (gvarinit -> ASSIGN INTEGER SEMI .)


state 23

    (9) gvarinit -> ASSIGN STRING SEMI .

    DONE            reduce using rule 9 (gvarinit -> ASSIGN STRING SEMI .)
    TYPE            reduce using rule 9 (gvarinit -> ASSIGN STRING SEMI .)


state 24

    (10) funcdecl -> funcname LPAREN paramlist RPAREN block .

    DONE            reduce using rule 10 (funcdecl -> funcname LPAREN paramlist RPAREN block .)
    TYPE            reduce using rule 10 (funcdecl -> funcname LPAREN paramlist RPAREN block .)


state 25

    (16) block -> LBRACE . stmtlist RBRACE
    (17) stmtlist -> .
    (18) stmtlist -> . stmtlist stmt SEMI
    (19) stmtlist -> . stmtlist stmt

    RBRACE          reduce using rule 17 (stmtlist -> .)
    PRINT           reduce using rule 17 (stmtlist -> .)
    READ            reduce using rule 17 (stmtlist -> .)
    TYPE            reduce using rule 17 (stmtlist -> .)
    RETURN          reduce using rule 17 (stmtlist -> .)
    ID              reduce using rule 17 (stmtlist -> .)

    stmtlist                       shift and go to state 27

state 26

    (15) params -> TYPE ID COMMA . params
    (14) params -> . TYPE ID
    (15) params -> . TYPE ID COMMA params

    TYPE            shift and go to state 17

    params                         shift and go to state 28

state 27

    (16) block -> LBRACE stmtlist . RBRACE
    (18) stmtlist -> stmtlist . stmt SEMI
    (19) stmtlist -> stmtlist . stmt
    (20) stmt -> . PRINT LPAREN expr RPAREN
    (21) stmt -> . READ LPAREN ID RPAREN
    (22) stmt -> . TYPE ID
    (23) stmt -> . TYPE ID ASSIGN expr
    (24) stmt -> . RETURN expr
    (25) stmt -> . ID ASSIGN expr
    (26) stmt -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    RBRACE          shift and go to state 29
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    TYPE            shift and go to state 34
    RETURN          shift and go to state 35
    ID              shift and go to state 33

    stmt                           shift and go to state 30
    call                           shift and go to state 36

state 28

    (15) params -> TYPE ID COMMA params .

    RPAREN          reduce using rule 15 (params -> TYPE ID COMMA params .)


state 29

    (16) block -> LBRACE stmtlist RBRACE .

    DONE            reduce using rule 16 (block -> LBRACE stmtlist RBRACE .)
    TYPE            reduce using rule 16 (block -> LBRACE stmtlist RBRACE .)


state 30

    (18) stmtlist -> stmtlist stmt . SEMI
    (19) stmtlist -> stmtlist stmt .

    SEMI            shift and go to state 37
    RBRACE          reduce using rule 19 (stmtlist -> stmtlist stmt .)
    PRINT           reduce using rule 19 (stmtlist -> stmtlist stmt .)
    READ            reduce using rule 19 (stmtlist -> stmtlist stmt .)
    TYPE            reduce using rule 19 (stmtlist -> stmtlist stmt .)
    RETURN          reduce using rule 19 (stmtlist -> stmtlist stmt .)
    ID              reduce using rule 19 (stmtlist -> stmtlist stmt .)


state 31

    (20) stmt -> PRINT . LPAREN expr RPAREN

    LPAREN          shift and go to state 38


state 32

    (21) stmt -> READ . LPAREN ID RPAREN

    LPAREN          shift and go to state 39


state 33

    (25) stmt -> ID . ASSIGN expr
    (36) call -> ID . LPAREN arglist RPAREN

    ASSIGN          shift and go to state 40
    LPAREN          shift and go to state 41


state 34

    (22) stmt -> TYPE . ID
    (23) stmt -> TYPE . ID ASSIGN expr

    ID              shift and go to state 42


state 35

    (24) stmt -> RETURN . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 43
    call                           shift and go to state 48

state 36

    (26) stmt -> call .

    SEMI            reduce using rule 26 (stmt -> call .)
    RBRACE          reduce using rule 26 (stmt -> call .)
    PRINT           reduce using rule 26 (stmt -> call .)
    READ            reduce using rule 26 (stmt -> call .)
    TYPE            reduce using rule 26 (stmt -> call .)
    RETURN          reduce using rule 26 (stmt -> call .)
    ID              reduce using rule 26 (stmt -> call .)


state 37

    (18) stmtlist -> stmtlist stmt SEMI .

    RBRACE          reduce using rule 18 (stmtlist -> stmtlist stmt SEMI .)
    PRINT           reduce using rule 18 (stmtlist -> stmtlist stmt SEMI .)
    READ            reduce using rule 18 (stmtlist -> stmtlist stmt SEMI .)
    TYPE            reduce using rule 18 (stmtlist -> stmtlist stmt SEMI .)
    RETURN          reduce using rule 18 (stmtlist -> stmtlist stmt SEMI .)
    ID              reduce using rule 18 (stmtlist -> stmtlist stmt SEMI .)


state 38

    (20) stmt -> PRINT LPAREN . expr RPAREN
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 49
    call                           shift and go to state 48

state 39

    (21) stmt -> READ LPAREN . ID RPAREN

    ID              shift and go to state 50


state 40

    (25) stmt -> ID ASSIGN . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 51
    call                           shift and go to state 48

state 41

    (36) call -> ID LPAREN . arglist RPAREN
    (37) arglist -> .
    (38) arglist -> . args
    (39) args -> . expr
    (40) args -> . args COMMA expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    RPAREN          reduce using rule 37 (arglist -> .)
    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    arglist                        shift and go to state 52
    args                           shift and go to state 53
    expr                           shift and go to state 54
    call                           shift and go to state 48

state 42

    (22) stmt -> TYPE ID .
    (23) stmt -> TYPE ID . ASSIGN expr

    SEMI            reduce using rule 22 (stmt -> TYPE ID .)
    RBRACE          reduce using rule 22 (stmt -> TYPE ID .)
    PRINT           reduce using rule 22 (stmt -> TYPE ID .)
    READ            reduce using rule 22 (stmt -> TYPE ID .)
    TYPE            reduce using rule 22 (stmt -> TYPE ID .)
    RETURN          reduce using rule 22 (stmt -> TYPE ID .)
    ID              reduce using rule 22 (stmt -> TYPE ID .)
    ASSIGN          shift and go to state 55


state 43

    (24) stmt -> RETURN expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    SEMI            reduce using rule 24 (stmt -> RETURN expr .)
    RBRACE          reduce using rule 24 (stmt -> RETURN expr .)
    PRINT           reduce using rule 24 (stmt -> RETURN expr .)
    READ            reduce using rule 24 (stmt -> RETURN expr .)
    TYPE            reduce using rule 24 (stmt -> RETURN expr .)
    RETURN          reduce using rule 24 (stmt -> RETURN expr .)
    ID              reduce using rule 24 (stmt -> RETURN expr .)
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59


state 44

    (27) expr -> INTEGER .

    PLUS            reduce using rule 27 (expr -> INTEGER .)
    MINUS           reduce using rule 27 (expr -> INTEGER .)
    TIMES           reduce using rule 27 (expr -> INTEGER .)
    DIVIDE          reduce using rule 27 (expr -> INTEGER .)
    SEMI            reduce using rule 27 (expr -> INTEGER .)
    RBRACE          reduce using rule 27 (expr -> INTEGER .)
    PRINT           reduce using rule 27 (expr -> INTEGER .)
    READ            reduce using rule 27 (expr -> INTEGER .)
    TYPE            reduce using rule 27 (expr -> INTEGER .)
    RETURN          reduce using rule 27 (expr -> INTEGER .)
    ID              reduce using rule 27 (expr -> INTEGER .)
    RPAREN          reduce using rule 27 (expr -> INTEGER .)
    COMMA           reduce using rule 27 (expr -> INTEGER .)


state 45

    (28) expr -> STRING .

    PLUS            reduce using rule 28 (expr -> STRING .)
    MINUS           reduce using rule 28 (expr -> STRING .)
    TIMES           reduce using rule 28 (expr -> STRING .)
    DIVIDE          reduce using rule 28 (expr -> STRING .)
    SEMI            reduce using rule 28 (expr -> STRING .)
    RBRACE          reduce using rule 28 (expr -> STRING .)
    PRINT           reduce using rule 28 (expr -> STRING .)
    READ            reduce using rule 28 (expr -> STRING .)
    TYPE            reduce using rule 28 (expr -> STRING .)
    RETURN          reduce using rule 28 (expr -> STRING .)
    ID              reduce using rule 28 (expr -> STRING .)
    RPAREN          reduce using rule 28 (expr -> STRING .)
    COMMA           reduce using rule 28 (expr -> STRING .)


state 46

    (29) expr -> ID .
    (36) call -> ID . LPAREN arglist RPAREN

    PLUS            reduce using rule 29 (expr -> ID .)
    MINUS           reduce using rule 29 (expr -> ID .)
    TIMES           reduce using rule 29 (expr -> ID .)
    DIVIDE          reduce using rule 29 (expr -> ID .)
    SEMI            reduce using rule 29 (expr -> ID .)
    RBRACE          reduce using rule 29 (expr -> ID .)
    PRINT           reduce using rule 29 (expr -> ID .)
    READ            reduce using rule 29 (expr -> ID .)
    TYPE            reduce using rule 29 (expr -> ID .)
    RETURN          reduce using rule 29 (expr -> ID .)
    ID              reduce using rule 29 (expr -> ID .)
    RPAREN          reduce using rule 29 (expr -> ID .)
    COMMA           reduce using rule 29 (expr -> ID .)
    LPAREN          shift and go to state 41


state 47

    (34) expr -> MINUS . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 60
    call                           shift and go to state 48

state 48

    (35) expr -> call .

    PLUS            reduce using rule 35 (expr -> call .)
    MINUS           reduce using rule 35 (expr -> call .)
    TIMES           reduce using rule 35 (expr -> call .)
    DIVIDE          reduce using rule 35 (expr -> call .)
    SEMI            reduce using rule 35 (expr -> call .)
    RBRACE          reduce using rule 35 (expr -> call .)
    PRINT           reduce using rule 35 (expr -> call .)
    READ            reduce using rule 35 (expr -> call .)
    TYPE            reduce using rule 35 (expr -> call .)
    RETURN          reduce using rule 35 (expr -> call .)
    ID              reduce using rule 35 (expr -> call .)
    RPAREN          reduce using rule 35 (expr -> call .)
    COMMA           reduce using rule 35 (expr -> call .)


state 49

    (20) stmt -> PRINT LPAREN expr . RPAREN
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59


state 50

    (21) stmt -> READ LPAREN ID . RPAREN

    RPAREN          shift and go to state 62


state 51

    (25) stmt -> ID ASSIGN expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    SEMI            reduce using rule 25 (stmt -> ID ASSIGN expr .)
    RBRACE          reduce using rule 25 (stmt -> ID ASSIGN expr .)
    PRINT           reduce using rule 25 (stmt -> ID ASSIGN expr .)
    READ            reduce using rule 25 (stmt -> ID ASSIGN expr .)
    TYPE            reduce using rule 25 (stmt -> ID ASSIGN expr .)
    RETURN          reduce using rule 25 (stmt -> ID ASSIGN expr .)
    ID              reduce using rule 25 (stmt -> ID ASSIGN expr .)
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59


state 52

    (36) call -> ID LPAREN arglist . RPAREN

    RPAREN          shift and go to state 63


state 53

    (38) arglist -> args .
    (40) args -> args . COMMA expr

    RPAREN          reduce using rule 38 (arglist -> args .)
    COMMA           shift and go to state 64


state 54

    (39) args -> expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    COMMA           reduce using rule 39 (args -> expr .)
    RPAREN          reduce using rule 39 (args -> expr .)
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59


state 55

    (23) stmt -> TYPE ID ASSIGN . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 65
    call                           shift and go to state 48

state 56

    (30) expr -> expr PLUS . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 66
    call                           shift and go to state 48

state 57

    (31) expr -> expr MINUS . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 67
    call                           shift and go to state 48

state 58

    (32) expr -> expr TIMES . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 68
    call                           shift and go to state 48

state 59

    (33) expr -> expr DIVIDE . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 69
    call                           shift and go to state 48

state 60

    (34) expr -> MINUS expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    PLUS            reduce using rule 34 (expr -> MINUS expr .)
    MINUS           reduce using rule 34 (expr -> MINUS expr .)
    SEMI            reduce using rule 34 (expr -> MINUS expr .)
    RBRACE          reduce using rule 34 (expr -> MINUS expr .)
    PRINT           reduce using rule 34 (expr -> MINUS expr .)
    READ            reduce using rule 34 (expr -> MINUS expr .)
    TYPE            reduce using rule 34 (expr -> MINUS expr .)
    RETURN          reduce using rule 34 (expr -> MINUS expr .)
    ID              reduce using rule 34 (expr -> MINUS expr .)
    RPAREN          reduce using rule 34 (expr -> MINUS expr .)
    COMMA           reduce using rule 34 (expr -> MINUS expr .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 34 (expr -> MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 34 (expr -> MINUS expr .) ]
  ! PLUS            [ shift and go to state 56 ]
  ! MINUS           [ shift and go to state 57 ]


state 61

    (20) stmt -> PRINT LPAREN expr RPAREN .

    SEMI            reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)
    RBRACE          reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)
    PRINT           reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)
    READ            reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)
    TYPE            reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)
    RETURN          reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)
    ID              reduce using rule 20 (stmt -> PRINT LPAREN expr RPAREN .)


state 62

    (21) stmt -> READ LPAREN ID RPAREN .

    SEMI            reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)
    RBRACE          reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)
    PRINT           reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)
    READ            reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)
    TYPE            reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)
    RETURN          reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)
    ID              reduce using rule 21 (stmt -> READ LPAREN ID RPAREN .)


state 63

    (36) call -> ID LPAREN arglist RPAREN .

    SEMI            reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    RBRACE          reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    PRINT           reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    READ            reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    TYPE            reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    RETURN          reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    ID              reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    PLUS            reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    MINUS           reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    TIMES           reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    DIVIDE          reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)
    COMMA           reduce using rule 36 (call -> ID LPAREN arglist RPAREN .)


state 64

    (40) args -> args COMMA . expr
    (27) expr -> . INTEGER
    (28) expr -> . STRING
    (29) expr -> . ID
    (30) expr -> . expr PLUS expr
    (31) expr -> . expr MINUS expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . MINUS expr
    (35) expr -> . call
    (36) call -> . ID LPAREN arglist RPAREN

    INTEGER         shift and go to state 44
    STRING          shift and go to state 45
    ID              shift and go to state 46
    MINUS           shift and go to state 47

    expr                           shift and go to state 70
    call                           shift and go to state 48

state 65

    (23) stmt -> TYPE ID ASSIGN expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    SEMI            reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    RBRACE          reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    PRINT           reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    READ            reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    TYPE            reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    RETURN          reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    ID              reduce using rule 23 (stmt -> TYPE ID ASSIGN expr .)
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59


state 66

    (30) expr -> expr PLUS expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    PLUS            reduce using rule 30 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 30 (expr -> expr PLUS expr .)
    SEMI            reduce using rule 30 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 30 (expr -> expr PLUS expr .)
    PRINT           reduce using rule 30 (expr -> expr PLUS expr .)
    READ            reduce using rule 30 (expr -> expr PLUS expr .)
    TYPE            reduce using rule 30 (expr -> expr PLUS expr .)
    RETURN          reduce using rule 30 (expr -> expr PLUS expr .)
    ID              reduce using rule 30 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 30 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 30 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 30 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 30 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 56 ]
  ! MINUS           [ shift and go to state 57 ]


state 67

    (31) expr -> expr MINUS expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    PLUS            reduce using rule 31 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 31 (expr -> expr MINUS expr .)
    SEMI            reduce using rule 31 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 31 (expr -> expr MINUS expr .)
    PRINT           reduce using rule 31 (expr -> expr MINUS expr .)
    READ            reduce using rule 31 (expr -> expr MINUS expr .)
    TYPE            reduce using rule 31 (expr -> expr MINUS expr .)
    RETURN          reduce using rule 31 (expr -> expr MINUS expr .)
    ID              reduce using rule 31 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 31 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 31 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 31 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 31 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 56 ]
  ! MINUS           [ shift and go to state 57 ]


state 68

    (32) expr -> expr TIMES expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    PLUS            reduce using rule 32 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 32 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 32 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 32 (expr -> expr TIMES expr .)
    SEMI            reduce using rule 32 (expr -> expr TIMES expr .)
    RBRACE          reduce using rule 32 (expr -> expr TIMES expr .)
    PRINT           reduce using rule 32 (expr -> expr TIMES expr .)
    READ            reduce using rule 32 (expr -> expr TIMES expr .)
    TYPE            reduce using rule 32 (expr -> expr TIMES expr .)
    RETURN          reduce using rule 32 (expr -> expr TIMES expr .)
    ID              reduce using rule 32 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 32 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 32 (expr -> expr TIMES expr .)

  ! PLUS            [ shift and go to state 56 ]
  ! MINUS           [ shift and go to state 57 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]


state 69

    (33) expr -> expr DIVIDE expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    PLUS            reduce using rule 33 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 33 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 33 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 33 (expr -> expr DIVIDE expr .)
    SEMI            reduce using rule 33 (expr -> expr DIVIDE expr .)
    RBRACE          reduce using rule 33 (expr -> expr DIVIDE expr .)
    PRINT           reduce using rule 33 (expr -> expr DIVIDE expr .)
    READ            reduce using rule 33 (expr -> expr DIVIDE expr .)
    TYPE            reduce using rule 33 (expr -> expr DIVIDE expr .)
    RETURN          reduce using rule 33 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 33 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 33 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 33 (expr -> expr DIVIDE expr .)

  ! PLUS            [ shift and go to state 56 ]
  ! MINUS           [ shift and go to state 57 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]


state 70

    (40) args -> args COMMA expr .
    (30) expr -> expr . PLUS expr
    (31) expr -> expr . MINUS expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . DIVIDE expr

    COMMA           reduce using rule 40 (args -> args COMMA expr .)
    RPAREN          reduce using rule 40 (args -> args COMMA expr .)
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

